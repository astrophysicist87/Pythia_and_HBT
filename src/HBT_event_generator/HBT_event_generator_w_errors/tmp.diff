18c18
< void HBT_event_generator::Compute_numerator_and_denominator_methodMode0_q_mode_1DrotInv()
---
> void HBT_event_generator::Compute_numerator_and_denominator_methodMode0_q_mode_1D()
99a100
> 						double loc_alpha = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
103c104,108
< 						double qRP_cen = 0.5*abs(Q0), qRP_hw = 0.5*abs(Q0);
---
> 						double qRP_min = 0.0;
> 						double num_loc = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
> 						double den_loc = 4.0*(particle_mass*particle_mass + sintthetaq*sintthetaq*(KT*KT + KL*KL)) + Q0*Q0;
> 						double qRP_max = abs(Q0)*sqrt(num_loc/den_loc);
> 						double qRP_cen = 0.5*(qRP_max + qRP_min), qRP_hw = 0.5*(qRP_max - qRP_min);
112a118,123
> 						//int index6D = indexer_qmode_1(iKT, iKphi, iKL, iQ, iqRP, ithq);
> 		
> 						const double xi0 = particle_mass*particle_mass + KT*KT + KL*KL + 0.25*(qo*qo+ql*ql);
> 						const double xi1 = qo*KT+ql*KL;
> 						const double xi3 = Q0*Q0 - qo*qo - ql*ql;
> 		
116c127
< 						double disc = Q0*Q0 - qo*qo - ql*ql;
---
> 						double disc = 4.0*xi1*xi1 + 4.0*xi0*xi3 + xi3*xi3;
121c132
< 						double qs0 = sqrt( Q0*Q0 - qo*qo - ql*ql );
---
> 						double qs0 = sqrt( disc / ( 4.0*xi0 + xi3 ) );
201a213,214
> 				double loc_alpha = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
> 
204c217,221
< 				double qRP_cen = 0.5*abs(Q0), qRP_hw = 0.5*abs(Q0);
---
> 				double qRP_min = 0.0;
> 				double num_loc = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
> 				double den_loc = 4.0*(particle_mass*particle_mass + sintthetaq*sintthetaq*(KT*KT + KL*KL)) + Q0*Q0;
> 				double qRP_max = abs(Q0)*sqrt(num_loc/den_loc);
> 				double qRP_cen = 0.5*(qRP_max + qRP_min), qRP_hw = 0.5*(qRP_max - qRP_min);
213a231,234
> 				const double xi0 = particle_mass*particle_mass + KT*KT + KL*KL + 0.25*(qo*qo+ql*ql);
> 				const double xi1 = qo*KT+ql*KL;
> 				const double xi3 = Q0*Q0 - qo*qo - ql*ql;
> 
217c238
< 				double disc = Q0*Q0 - qo*qo - ql*ql;
---
> 				double disc = 4.0*xi1*xi1 + 4.0*xi0*xi3 + xi3*xi3;
222c243,245
< 				double qs0 = sqrt( Q0*Q0 - qo*qo - ql*ql );
---
> 				double qs0 = sqrt( disc / ( 4.0*xi0 + xi3 ) );
> 				//if (abs(qs0) < 1.e-6)
> 				//	continue;
306a330
> 				const double loc_alpha = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
309,310c333,334
< 				double numerator_this_event = 0.0;
< 				double denominator_this_event = 0.0;
---
> 				double numerator_contribution_from_this_event = 0.0;
> 				double denominator_contribution_from_this_event = 0.0;
321c345,349
< 					const double qRP_cen = 0.5*abs(Q0), qRP_hw = 0.5*abs(Q0);
---
> 					const double qRP_min = 0.0;
> 					double num_loc = 4.0*(particle_mass*particle_mass + KT*KT + KL*KL) + Q0*Q0;
> 					double den_loc = 4.0*(particle_mass*particle_mass + sintthetaq*sintthetaq*(KT*KT + KL*KL)) + Q0*Q0;
> 					double qRP_max = abs(Q0)*sqrt(num_loc/den_loc);
> 					const double qRP_cen = 0.5*(qRP_max + qRP_min), qRP_hw = 0.5*(qRP_max - qRP_min);
329a358,361
> 						const double xi0 = particle_mass*particle_mass + KT*KT + KL*KL + 0.25*(qo*qo+ql*ql);
> 						const double xi1 = qo*KT+ql*KL;
> 						const double xi3 = Q0*Q0 - qo*qo - ql*ql;
> 
333c365
< 						const double disc = Q0*Q0 - qo*qo - ql*ql;
---
> 						const double disc = 4.0*xi1*xi1 + 4.0*xi0*xi3 + xi3*xi3;
341c373,375
< 						const double qs0 = sqrt( Q0*Q0 - qo*qo - ql*ql );
---
> 						const double qs0 = sqrt( disc / ( 4.0*xi0 + xi3 ) );
> 						//if (abs(qs0) < 1.e-6)
> 						//	continue;
345c379,381
< 						const double weight_factor = /*(qs0 < 1.e-6) ? 0.0 :*/ 1.0 / ( 2.0 * qs0 + 1.e-100 );
---
> 						const double weight_num = abs( (4.0*xi0+xi3)*(4.0*xi0+xi3) - 4.0*xi1*xi1 );
> 						const double weight_den = 1.e-100+qs0*( (4.0*xi0+xi3)*(4.0*xi0+xi3) + 4.0*xi1*xi1 + weight_num );
> 						const double weight_factor = /*(qs0 < 1.e-6) ? 0.0 :*/ weight_num / weight_den;
351c387
< 							const int index7D 		= indexer_qmode_1(iKT, iKphi, iKL, iQ, iqRP, ithq, i_qs_root);
---
> 							const int index7D = indexer_qmode_1(iKT, iKphi, iKL, iQ, iqRP, ithq, i_qs_root);
354,358c390,396
< 							const double abs_sum1 	= abs( sum1[index7D] );
< 							numerator_this_event 	+= integration_weight * weight_factor
< 														* ( abs_sum1*abs_sum1 - sum2[index7D] );
< 							denominator_this_event 	+= integration_weight * weight_factor
< 														* ( sum3[index7D]*sum4[index7D] - sum5[index7D] );
---
> 							const double abs_sum1 = abs( sum1[index7D] );
> 							numerator_contribution_from_this_event
> 									+= integration_weight * weight_factor
> 										* ( abs_sum1*abs_sum1 - sum2[index7D] );
> 							denominator_contribution_from_this_event
> 									+= integration_weight * weight_factor
> 										* ( sum3[index7D]*sum4[index7D] - sum5[index7D] );
373,374c411,414
< 				numerator[index4D] 				+= numerator_this_event;
< 				denominator[index4D] 			+= denominator_this_event;
---
> 				numerator[index4D]
> 					+= numerator_contribution_from_this_event;
> 				denominator[index4D]
> 					+= denominator_contribution_from_this_event;
377,379c417,425
< 				numerator2[index4D] 			+= numerator_this_event * numerator_this_event;
< 				denominator2[index4D] 			+= denominator_this_event * denominator_this_event;
< 				numerator_denominator[index4D] 	+= numerator_this_event * denominator_this_event;
---
> 				numerator2[index4D]
> 					+= numerator_contribution_from_this_event
> 						* numerator_contribution_from_this_event;
> 				denominator2[index4D]
> 					+= denominator_contribution_from_this_event
> 						* denominator_contribution_from_this_event;
> 				numerator_denominator[index4D]
> 					+= numerator_contribution_from_this_event
> 						* denominator_contribution_from_this_event;
400c446
< void HBT_event_generator::Compute_numerator_and_denominator_momentum_space_only_q_mode_1DrotInv()
---
> void HBT_event_generator::Compute_numerator_and_denominator_momentum_space_only_q_mode_1D()
502,503c548
< 			//double Q2bar = qo*qo + qs*qs + ql*ql - q0*q0;	// Q2bar>=0
< 			double Q2bar = qo*qo + qs*qs + ql*ql;	// Q2bar>=0
---
> 			double Q2bar = qo*qo + qs*qs + ql*ql - q0*q0;	// Q2bar>=0
646,647c691
< 				//double Q2bar = qo*qo + qs*qs + ql*ql - q0*q0;	// Q2bar>=0
< 				double Q2bar = qo*qo + qs*qs + ql*ql;	// Q2bar>=0
---
> 				double Q2bar = qo*qo + qs*qs + ql*ql - q0*q0;	// Q2bar>=0
